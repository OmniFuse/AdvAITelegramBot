import pyrogram
from pyrogram import filters
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from pyrogram.types import Message
from pyrogram.types import InlineQuery
from pyrogram.types import CallbackQuery
from modules.lang import async_translate_to_lang, batch_translate, translate_ui_element
from modules.chatlogs import channel_log
from config import ADMINS


command__text = """
**ü§ñ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ ü§ñ**

–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ –ø—Ä–∏–º–µ—Ä—ã.

**@AdvChatGptBot**
"""

ai_commands_text = """
**üß† –ö–æ–º–∞–Ω–¥—ã AI-—á–∞—Ç–∞**

**–í –ª–∏—á–Ω—ã—Ö —á–∞—Ç–∞—Ö:**
- –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –æ—Ç–≤–µ—á—É
- –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/new` –∏–ª–∏ `/newchat` –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –±–µ—Å–µ–¥—ã

**–í –≥—Ä—É–ø–ø–∞—Ö:**
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/ai [–≤–æ–ø—Ä–æ—Å]`, —á—Ç–æ–±—ã —Å–ø—Ä–æ—Å–∏—Ç—å –Ω–∞–ø—Ä—è–º—É—é
  –ü—Ä–∏–º–µ—Ä: `/ai –∫–∞–∫–∞—è –ø–æ–≥–æ–¥–∞ –≤ –ü–∞—Ä–∏–∂–µ?`
- –û—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –º–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
- –í –∫–∞—á–µ—Å—Ç–≤–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/ask [–≤–æ–ø—Ä–æ—Å]` –∏–ª–∏ `/say [–≤–æ–ø—Ä–æ—Å]`

**–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã:**
- –Ø –ø–æ–º–Ω—é –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –≤ –ª–∏—á–Ω—ã—Ö —á–∞—Ç–∞—Ö
- –î–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é —É–∫–∞–∑—ã–≤–∞–π—Ç–µ —è–∑—ã–∫ –¥–ª—è –ª—É—á—à–µ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/new` –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ –±–µ—Å–µ–¥—ã

**@AdvChatGptBot**
"""

image_commands_text = """
**üñºÔ∏è –ö–æ–º–∞–Ω–¥—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π**

**–í –ª–∏—á–Ω—ã—Ö —á–∞—Ç–∞—Ö:**
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/generate [–∑–∞–ø—Ä–æ—Å]` –∏–ª–∏ `/img [–∑–∞–ø—Ä–æ—Å]` –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  –ü—Ä–∏–º–µ—Ä: `/img —Å–ø–æ–∫–æ–π–Ω—ã–π –≥–æ—Ä–Ω—ã–π –ø–µ–π–∑–∞–∂ –Ω–∞ –∑–∞–∫–∞—Ç–µ`
- –ü–æ—Å–ª–µ –≤–≤–æ–¥–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å
- –ù–∞–∂–º–∏—Ç–µ ¬´—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞¬ª, —á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É

**–í –≥—Ä—É–ø–ø–∞—Ö:**
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ –∂–µ –∫–æ–º–∞–Ω–¥—ã, —á—Ç–æ –∏ –≤ –ª–∏—á–Ω—ã—Ö —á–∞—Ç–∞—Ö
- –í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –≤–∏–¥—è—Ç –∏ –º–æ–≥—É—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
- –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –æ—Ç–ø—Ä–∞–≤–∏–≤—à–∏–π –∑–∞–ø—Ä–æ—Å

**–ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:**
- –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏ –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–∫—Å—Ç–∞
- –î–æ–±–∞–≤—å—Ç–µ "ai" –≤ –ø–æ–¥–ø–∏—Å—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤ –≥—Ä—É–ø–ø–∞—Ö

**–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã:**
- –ß–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ –∑–∞–ø—Ä–æ—Å, —Ç–µ–º –ª—É—á—à–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
- –ü—Ä–æ–±—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
- –£–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å—ã –¥–ª—è –Ω—É–∂–Ω–æ–π —Å—Ç–∏–ª–∏—Å—Ç–∏–∫–∏

**@AdvChatGptBot**
"""

main_commands_text = """
**üìã –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã**

**/start** - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ —É–≤–∏–¥–µ—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
**/help** - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
**/settings** - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –±–æ—Ç–∞
**/rate** - –æ—Ü–µ–Ω–∏—Ç—å –±–æ—Ç–∞

**@AdvChatGptBot**
"""

admin_commands_text = """
**‚öôÔ∏è –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –±–æ—Ç–∞**

–≠—Ç–∏ –∫–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –±–æ—Ç–∞.

**/premium <user_id|username> <days>** - –≤—ã–¥–∞—Ç—å –ø—Ä–µ–º–∏—É–º
**/unpremium <user_id|username>** - —É–±—Ä–∞—Ç—å –ø—Ä–µ–º–∏—É–º
**/upremium** - —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–º–∏—É–º-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
**/ban <user_id|username> [reason]** - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
**/unban <user_id|username>** - —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
**/history <user_id>** - –∏—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
**/uinfo <user_id|username>** - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
**/announce <message>** - —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
**/logs** - –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –±–æ—Ç–∞
**/stats** - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞
**/restart** - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
**/gleave** - –≤—ã–π—Ç–∏ –∏–∑ —Ç–µ–∫—É—â–µ–π –≥—Ä—É–ø–ø—ã
**/invite** - –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è

**–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:** —ç—Ç–∏ –∫–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º, —É–∫–∞–∑–∞–Ω–Ω—ã–º –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.

**@AdvChatGptBot**
"""


async def command_inline(client, callback):
    user_id = callback.from_user.id
    
    # Translate the command text and buttons
    texts_to_translate = [command__text, "üß† AI Response", "üñºÔ∏è Image Generation", "üìã Main Commands", "üîô Back"]
    translated_texts = await batch_translate(texts_to_translate, user_id)
    
    # Extract translated results
    translated_command = translated_texts[0]
    ai_btn = translated_texts[1]
    img_btn = translated_texts[2]
    main_btn = translated_texts[3]
    back_btn = translated_texts[4]
    
    # Create base keyboard
    keyboard_buttons = [
        [InlineKeyboardButton(ai_btn, callback_data="cmd_ai")],
        [InlineKeyboardButton(img_btn, callback_data="cmd_img")],
        [InlineKeyboardButton(main_btn, callback_data="cmd_main")]
    ]
    
    # Add admin button if user is an admin
    if user_id in ADMINS:
        admin_btn = "‚öôÔ∏è Admin Commands"
        keyboard_buttons.append([InlineKeyboardButton(admin_btn, callback_data="cmd_admin")])
    
    # Add back button
    keyboard_buttons.append([InlineKeyboardButton(back_btn, callback_data="help_help")])
    
    keyboard = InlineKeyboardMarkup(keyboard_buttons)

    await client.edit_message_text(
        chat_id=callback.message.chat.id,
        message_id=callback.message.id,
        text=translated_command,
        reply_markup=keyboard,
        disable_web_page_preview=True
    )

    await callback.answer()
    return

async def handle_command_callbacks(client, callback):
    user_id = callback.from_user.id
    callback_data = callback.data
    
    if callback_data == "cmd_ai":
        # Show AI commands
        translated_text = await async_translate_to_lang(ai_commands_text, user_id)
        back_btn = await translate_ui_element("üîô Back to Commands", user_id)
        
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton(back_btn, callback_data="commands")]
        ])
        
        await client.edit_message_text(
            chat_id=callback.message.chat.id,
            message_id=callback.message.id,
            text=translated_text,
            reply_markup=keyboard,
            disable_web_page_preview=True
        )
        
    elif callback_data == "cmd_img":
        # Show Image commands
        translated_text = await async_translate_to_lang(image_commands_text, user_id)
        back_btn = await translate_ui_element("üîô Back to Commands", user_id)
        
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton(back_btn, callback_data="commands")]
        ])
        
        await client.edit_message_text(
            chat_id=callback.message.chat.id,
            message_id=callback.message.id,
            text=translated_text,
            reply_markup=keyboard,
            disable_web_page_preview=True
        )
        
    elif callback_data == "cmd_main":
        # Show main commands
        translated_text = await async_translate_to_lang(main_commands_text, user_id)
        back_btn = await translate_ui_element("üîô Back to Commands", user_id)
        
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton(back_btn, callback_data="commands")]
        ])
        
        await client.edit_message_text(
            chat_id=callback.message.chat.id,
            message_id=callback.message.id,
            text=translated_text,
            reply_markup=keyboard,
            disable_web_page_preview=True
        )
    
    elif callback_data == "cmd_admin":
        # Show admin commands (only for admins)
        if user_id in ADMINS:
            back_btn = await translate_ui_element("üîô Back to Commands", user_id)
            
            keyboard = InlineKeyboardMarkup([
                [InlineKeyboardButton(back_btn, callback_data="commands")]
            ])
            
            await client.edit_message_text(
                chat_id=callback.message.chat.id,
                message_id=callback.message.id,
                text=admin_commands_text,
                reply_markup=keyboard,
                disable_web_page_preview=True
            )
        else:
            # User is not an admin, show unauthorized message
            await callback.answer("You don't have permission to view admin commands", show_alert=True)
    
    await callback.answer()
    return

async def command_inline_start(client, callback):
    user_id = callback.from_user.id
    texts_to_translate = [command__text, "üß† AI Response", "üñºÔ∏è Image Generation", "üìã Main Commands", "üîô Back"]
    translated_texts = await batch_translate(texts_to_translate, user_id)
    translated_command = translated_texts[0]
    ai_btn = translated_texts[1]
    img_btn = translated_texts[2]
    main_btn = translated_texts[3]
    back_btn = translated_texts[4]
    keyboard_buttons = [
        [InlineKeyboardButton(ai_btn, callback_data="cmd_ai_start")],
        [InlineKeyboardButton(img_btn, callback_data="cmd_img_start")],
        [InlineKeyboardButton(main_btn, callback_data="cmd_main_start")],
    ]
    if user_id in ADMINS:
        admin_btn = "‚öôÔ∏è Admin Commands"
        keyboard_buttons.append([InlineKeyboardButton(admin_btn, callback_data="cmd_admin_start")])
    keyboard_buttons.append([InlineKeyboardButton(back_btn, callback_data="back")])
    keyboard = InlineKeyboardMarkup(keyboard_buttons)
    await client.edit_message_text(
        chat_id=callback.message.chat.id,
        message_id=callback.message.id,
        text=translated_command,
        reply_markup=keyboard,
        disable_web_page_preview=True
    )
    await callback.answer()
    return

async def command_inline_help(client, callback):
    user_id = callback.from_user.id
    texts_to_translate = [command__text, "üß† AI Response", "üñºÔ∏è Image Generation", "üìã Main Commands", "üîô Back"]
    translated_texts = await batch_translate(texts_to_translate, user_id)
    translated_command = translated_texts[0]
    ai_btn = translated_texts[1]
    img_btn = translated_texts[2]
    main_btn = translated_texts[3]
    back_btn = translated_texts[4]
    keyboard_buttons = [
        [InlineKeyboardButton(ai_btn, callback_data="cmd_ai_help")],
        [InlineKeyboardButton(img_btn, callback_data="cmd_img_help")],
        [InlineKeyboardButton(main_btn, callback_data="cmd_main_help")],
    ]
    if user_id in ADMINS:
        admin_btn = "‚öôÔ∏è Admin Commands"
        keyboard_buttons.append([InlineKeyboardButton(admin_btn, callback_data="cmd_admin_help")])
    keyboard_buttons.append([InlineKeyboardButton(back_btn, callback_data="help_help")])
    keyboard = InlineKeyboardMarkup(keyboard_buttons)
    await client.edit_message_text(
        chat_id=callback.message.chat.id,
        message_id=callback.message.id,
        text=translated_command,
        reply_markup=keyboard,
        disable_web_page_preview=True
    )
    await callback.answer()
    return

async def handle_command_callbacks_start(client, callback):
    user_id = callback.from_user.id
    callback_data = callback.data
    if callback_data == "cmd_ai_start":
        translated_text = await async_translate_to_lang(ai_commands_text, user_id)
        back_btn = await translate_ui_element("üîô Back to Commands", user_id)
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton(back_btn, callback_data="commands_start")]
        ])
        await client.edit_message_text(
            chat_id=callback.message.chat.id,
            message_id=callback.message.id,
            text=translated_text,
            reply_markup=keyboard,
            disable_web_page_preview=True
        )
    elif callback_data == "cmd_img_start":
        translated_text = await async_translate_to_lang(image_commands_text, user_id)
        back_btn = await translate_ui_element("üîô Back to Commands", user_id)
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton(back_btn, callback_data="commands_start")]
        ])
        await client.edit_message_text(
            chat_id=callback.message.chat.id,
            message_id=callback.message.id,
            text=translated_text,
            reply_markup=keyboard,
            disable_web_page_preview=True
        )
    elif callback_data == "cmd_main_start":
        translated_text = await async_translate_to_lang(main_commands_text, user_id)
        back_btn = await translate_ui_element("üîô Back to Commands", user_id)
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton(back_btn, callback_data="commands_start")]
        ])
        await client.edit_message_text(
            chat_id=callback.message.chat.id,
            message_id=callback.message.id,
            text=translated_text,
            reply_markup=keyboard,
            disable_web_page_preview=True
        )
    elif callback_data == "cmd_admin_start":
        if user_id in ADMINS:
            back_btn = await translate_ui_element("üîô Back to Commands", user_id)
            keyboard = InlineKeyboardMarkup([
                [InlineKeyboardButton(back_btn, callback_data="commands_start")]
            ])
            await client.edit_message_text(
                chat_id=callback.message.chat.id,
                message_id=callback.message.id,
                text=admin_commands_text,
                reply_markup=keyboard,
                disable_web_page_preview=True
            )
        else:
            await callback.answer("You don't have permission to view admin commands", show_alert=True)
    await callback.answer()
    return

async def handle_command_callbacks_help(client, callback):
    user_id = callback.from_user.id
    callback_data = callback.data
    if callback_data == "cmd_ai_help":
        translated_text = await async_translate_to_lang(ai_commands_text, user_id)
        back_btn = await translate_ui_element("üîô Back to Commands", user_id)
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton(back_btn, callback_data="commands_help")]
        ])
        await client.edit_message_text(
            chat_id=callback.message.chat.id,
            message_id=callback.message.id,
            text=translated_text,
            reply_markup=keyboard,
            disable_web_page_preview=True
        )
    elif callback_data == "cmd_img_help":
        translated_text = await async_translate_to_lang(image_commands_text, user_id)
        back_btn = await translate_ui_element("üîô Back to Commands", user_id)
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton(back_btn, callback_data="commands_help")]
        ])
        await client.edit_message_text(
            chat_id=callback.message.chat.id,
            message_id=callback.message.id,
            text=translated_text,
            reply_markup=keyboard,
            disable_web_page_preview=True
        )
    elif callback_data == "cmd_main_help":
        translated_text = await async_translate_to_lang(main_commands_text, user_id)
        back_btn = await translate_ui_element("üîô Back to Commands", user_id)
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton(back_btn, callback_data="commands_help")]
        ])
        await client.edit_message_text(
            chat_id=callback.message.chat.id,
            message_id=callback.message.id,
            text=translated_text,
            reply_markup=keyboard,
            disable_web_page_preview=True
        )
    elif callback_data == "cmd_admin_help":
        if user_id in ADMINS:
            back_btn = await translate_ui_element("üîô Back to Commands", user_id)
            keyboard = InlineKeyboardMarkup([
                [InlineKeyboardButton(back_btn, callback_data="commands_help")]
            ])
            await client.edit_message_text(
                chat_id=callback.message.chat.id,
                message_id=callback.message.id,
                text=admin_commands_text,
                reply_markup=keyboard,
                disable_web_page_preview=True
            )
        else:
            await callback.answer("You don't have permission to view admin commands", show_alert=True)
    await callback.answer()
    return


